import re
from telethon import TelegramClient, events
import os

api_id = int(os.getenv("API_ID"))
api_hash = os.getenv("API_HASH")
source_channel_id = int(os.getenv("SOURCE_CHANNEL_ID"))
destination_channel_id = int(os.getenv("DESTINATION_CHANNEL_ID"))


client = TelegramClient('session_name', api_id, api_hash)

# –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ä–µ–∫–ª–∞–º—ã, —Å–±–æ—Ä–æ–≤ –∏ –ø–æ–º–æ—â–∏
blacklist_words = [
    "–¥–æ–Ω–∞—Ç", "–ø—ñ–¥—Ç—Ä–∏–º–∞—Ç–∏", "—Ä–µ–∫–ª–∞–º–∞", "–ø—ñ–¥–ø–∏—Å–∫–∞", "–ø–µ—Ä–µ–∫–∞–∑ –Ω–∞ –∫–∞—Ä—Ç—É",
    "–ø–æ–∂–µ—Ä—Ç–≤–∞", "–¥–æ–ø–æ–º–æ–≥–∞", "–ø—ñ–¥—Ç—Ä–∏–º–∫–∞", "–∑–±—ñ—Ä", "–∑–∞–¥–æ–Ω–∞—Ç–∏—Ç–∏"
]

# –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–æ–º–µ—Ä–æ–≤ –∫–∞—Ä—Ç (Visa, Mastercard, IBAN)
card_pattern = re.compile(r'\b(?:\d[ -]*){12,19}\b|\bUA\d{25,}\b')

# –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫, –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –≤ —Å–ª–æ–≤–∞
url_pattern = re.compile(r'\b\S*https?://\S*\b', re.IGNORECASE)

# –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ —Å –≥–æ—Ä–æ–¥–æ–º –∏ —Å—Å—ã–ª–∫–æ–π
city_pattern = re.compile(r'–°—Ç–µ–∂–∏—Ç–∏ –∑–∞ –æ–±—Å—Ç–∞–Ω–æ–≤–∫–æ—é –≤ .*? –º–æ–∂–Ω–∞ —Ç—É—Ç - \S+', re.IGNORECASE)

# –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –Ω–∞–±–æ—Ä–∞ –±—É–∫–≤ (–µ—Å–ª–∏ –æ–Ω –∏–¥—ë—Ç –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π)
random_letters_pattern = re.compile(r'^\s*[–∞-—è–ê-–Øa-zA-Z]{4,}\s*$', re.MULTILINE)

# –¢–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω—Ü–µ –ø–æ—Å—Ç–∞
extra_text = 'üá∫üá¶ <a href="https://t.me/+9RxqorgcHYZkYTQy">–ù–µ–±–µ—Å–Ω–∏–π –í–∞—Ä—Ç–æ–≤–∏–π</a>'

@client.on(events.NewMessage(chats=source_channel_id))
async def handler(event):
    try:
        message_text = event.message.raw_text or ""  # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç–∞ –Ω–µ—Ç, –æ—Å—Ç–∞–≤–ª—è–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
        message_media = event.message.media  # –ü–æ–ª—É—á–∞–µ–º –≤–ª–æ–∂–µ–Ω–∏–µ (—Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ)

        # –£–¥–∞–ª—è–µ–º —Å—Å—ã–ª–∫–∏, –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –≤ —Å–ª–æ–≤–∞
        message_text = re.sub(url_pattern, '', message_text)

        # –£–¥–∞–ª—è–µ–º —Å—Ç—Ä–æ–∫—É "–°—Ç–µ–∂–∏—Ç–∏ –∑–∞ –æ–±—Å—Ç–∞–Ω–æ–≤–∫–æ—é –≤ ..."
        message_text = re.sub(city_pattern, '', message_text).strip()

        # –£–¥–∞–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –±—É–∫–≤—ã (–µ—Å–ª–∏ —ç—Ç–æ –æ—Ç–¥–µ–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞)
        message_text = re.sub(random_letters_pattern, '', message_text).strip()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ –∏ –Ω–æ–º–µ—Ä–∞ –∫–∞—Ä—Ç
        if any(word in message_text for word in blacklist_words) or card_pattern.search(message_text):
            print("–°–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –∏–∑-–∑–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏.")
            return  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ

        # –ï—Å–ª–∏ –Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞, –Ω–æ –µ—Å—Ç—å —Ñ–æ—Ç–æ ‚Äì –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ñ–æ—Ç–æ
        if not message_text and message_media:
            await client.send_file(destination_channel_id, message_media)
            print("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ç–æ–ª—å–∫–æ —Ñ–æ—Ç–æ.")
            return

        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å—å —Å —Å—Å—ã–ª–∫–æ–π
        if message_text:
            message_text += f"\n\n{extra_text}"

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç + —Ñ–æ—Ç–æ, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
        if message_media:
            await client.send_file(destination_channel_id, message_media, caption=message_text, parse_mode='html')
            print("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–æ—Ç–æ —Å —Ç–µ–∫—Å—Ç–æ–º.")
        else:
            await client.send_message(destination_channel_id, message_text, link_preview=False, parse_mode='html')
            print("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.")

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

client.start()
client.run_until_disconnected()
